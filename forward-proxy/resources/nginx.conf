user root;
daemon off;
worker_processes  auto;

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;

    sendfile        on;

    keepalive_timeout  65;
    server {
        resolver 8.8.8.8;
        resolver_timeout 10s;

        error_page 404 =404 @404_json;
        error_page 400 405 403 =400 @40*_json;
        error_page 500 =500 @500_json;
        error_page 502 =502 @502_json;
        error_page 503 =503 @503_json;
        error_page 504 =504 @504_json;

        location @404_json {
            default_type application/json;
            return 404 '{"status":"404", "message": "Not Found"}';
        }

        location @40*_json {
            default_type application/json;
            return 400 '{"status":"400", "message": "Bad request"}';
        }

        location @502_json {
            default_type application/json;
            return 502 '{"code":"502", "message": "Bad gateway"}';
        }

        location @503_json {
            default_type application/json;
            return 503 '{"code":"503", "message": "Service Unavailable"}';
        }

        location @504_json {
            default_type application/json;
            return 504 '{"code":"504", "message": "Gateway timeout"}';
        }

        location @500_json {
            default_type application/json;
            return 500 '{"code":"500", "message": "Internal server error"}';
        }

        if ($http_x_forward_to = '') {
            return 400;
        }

        if ($http_x_forward_scheme = '') {
            return 400;
        }

        listen 80 default_server;
        server_name _;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        location / {
            proxy_pass $http_x_forward_scheme://$http_x_forward_to;
            proxy_set_header Host            $http_x_forward_to;
        }
    }
}
